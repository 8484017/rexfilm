{"version":3,"sources":["webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/components/logger/logger.component.html","webpack:///./src/app/admin/components/logger/logger.component.scss","webpack:///./src/app/admin/components/logger/logger.component.ts","webpack:///./src/app/admin/layout/admin-layout/admin-layout.component.html","webpack:///./src/app/admin/layout/admin-layout/admin-layout.component.scss","webpack:///./src/app/admin/layout/admin-layout/admin-layout.component.ts","webpack:///./src/app/admin/pages/index-page-admin/index-page-admin.component.html","webpack:///./src/app/admin/pages/index-page-admin/index-page-admin.component.scss","webpack:///./src/app/admin/pages/index-page-admin/index-page-admin.component.ts","webpack:///./src/app/admin/pages/parser-page-admin/parser-page-admin.component.html","webpack:///./src/app/admin/pages/parser-page-admin/parser-page-admin.component.scss","webpack:///./src/app/admin/pages/parser-page-admin/parser-page-admin.component.ts","webpack:///./src/app/services/log.service.ts","webpack:///./src/app/services/parser.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACqC;AACU;AACG;AAClD;AACwB;AAC1B;AAiB7C;IAAA;IAA2B,CAAC;IAAf,WAAW;QAfvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gGAAoB,EAAE,QAAQ,EAAE;4BACnD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0GAAuB,EAAE;4BAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,6GAAwB,EAAE;yBACxD;qBACF;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,gGAAoB,EAAE,0GAAuB,EAAE,6GAAwB,EAAE,mFAAe,CAAC;SACzG,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxBxB,0UAA0U,wCAAwC,GAAG,aAAa,oDAAoD,WAAW,yB;;;;;;;;;;;ACAjc,2BAA2B,kBAAkB,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAC;AACZ;AAEuD;AACxD;AACY;AAQtE;IACE,yBACU,GAAe,EACM,UAAkB;QADvC,QAAG,GAAH,GAAG,CAAY;QACM,eAAU,GAAV,UAAU,CAAQ;QAGjD,SAAI,GAAU,EAAE;IAFZ,CAAC;IAIL,kCAAQ,GAAR;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,yEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAEvC,IAAI,CAAC,MAAM,GAAG,qDAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,8DAAO,CAAC,cAAM,YAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAjB,CAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,IAAI,GAAG,CAAC,EAAb,CAAa,CAAC;QACnG,CAAC;IAEH,CAAC;IAEK,kCAAQ,GAAd;;;;4BACE,qBAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE;;wBAArC,SAAqC;;;;;KACtC;IAED,qCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;QAC3B,CAAC;IACH,CAAC;IAxBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;QAIG,uEAAM,CAAC,yDAAW,CAAC;yCADP,gEAAU;YACkB,MAAM;OAHtC,eAAe,CAyB3B;IAAD,sBAAC;CAAA;AAzB2B;;;;;;;;;;;;ACb5B,uRAAuR,WAAW,qW;;;;;;;;;;;ACAlS,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,yD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;ACPpC,kQ;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAuE;AACN;AACnB;AACL;AACW;AAOpD;IAEE,kCACU,QAAuB,EACF,UAAkB;QADvC,aAAQ,GAAR,QAAQ,CAAe;QACF,eAAU,GAAV,UAAU,CAAQ;QAGjD,WAAM,GAAQ,EAAE;IADZ,CAAC;IAGL,2CAAQ,GAAR;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,yEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAEvC,IAAI,CAAC,MAAM,GAAG,qDAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,8DAAO,CAAC,WAAC,IAAI,YAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAzB,CAAyB,CAAC,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,GAAG,CAAC,EAAf,CAAe,CAAC;QAE5G,CAAC;IACH,CAAC;IAGD,8CAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE;IACvC,CAAC;IAGD,+CAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC;IACxC,CAAC;IAED,8CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC;IAjCU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;QAKG,uEAAM,CAAC,yDAAW,CAAC;yCADF,sEAAa;YACU,MAAM;OAJtC,wBAAwB,CAmCpC;IAAD,+BAAC;CAAA;AAnCoC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXM;AACO;AAGZ;AAItC;IAEE,oBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAIE,2BAAM,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,UAAU,EAAE,EAAE,OAAO,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,CAAC;IAChF,CAAC;IAEM,6BAAQ,GAAf;QAAA,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAG,CAAC,WAAC;YACtE,KAAI,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAhBU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;OAHf,UAAU,CAiBtB;IAAD,iBAAC;CAAA;AAjBsB;;;;;;;;;;;;;;;;;;;;;;;;;;ACRoB;AACO;AAKlD;IAEE,uBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEE,iCAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAC,EAAE,OAAO,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,CAAC;IAClF,CAAC;IAEM,mCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC;IAC3C,CAAC;IAEM,oCAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC;IAC5C,CAAC;IAhBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;OAHf,aAAa,CAiBzB;IAAD,oBAAC;CAAA;AAjByB","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminLayoutComponent } from './layout/admin-layout/admin-layout.component';\nimport { IndexPageAdminComponent } from './pages/index-page-admin/index-page-admin.component';\nimport { ParserPageAdminComponent } from './pages/parser-page-admin/parser-page-admin.component';\nimport { RouterModule } from '@angular/router';\nimport { LoggerComponent } from './components/logger/logger.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {\n        path: \"\", component: AdminLayoutComponent, children: [\n          { path: \"\", component: IndexPageAdminComponent },\n          { path: \"parser\", component: ParserPageAdminComponent }\n        ]\n      }\n    ])\n  ],\n  declarations: [AdminLayoutComponent, IndexPageAdminComponent, ParserPageAdminComponent, LoggerComponent]\n})\nexport class AdminModule { }\n","module.exports = \"<div class=\\\"text-right pr-2 bg-dark\\\">\\n  <button class=\\\"btn btn-sm py-0 m-1 btn-outline-warning \\\" (click)=\\\"clearLog()\\\">очистить</button>\\n</div>\\n<div class=\\\"row w-100 m-0 bg-secondary logger align-items-start align-content-start\\\">\\n  <div *ngFor=\\\"let log of logs \\\" class=\\\"w-100 bg-light pl-2 m-1\\\">{{ log.timestamp | date: '(dd) HH:mm:ss'}} {{log.message}}\\n    <div class=\\\"w-100 pl-4 small text-danger\\\">{{log.error}}</div>\\n  </div>\\n</div>\"","module.exports = \".logger {\\n  height: 200px;\\n  overflow-y: scroll; }\\n\"","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { LogService } from '../../../services/log.service';\nimport { Log } from '../../../../../../models/log.model';\nimport { timeInterval, map, tap, switchMap, repeatWhen, delay, delayWhen, repeat, flatMap } from 'rxjs/operators';\nimport { interval, Observable, Subscription } from 'rxjs';\nimport { isPlatformServer, isPlatformBrowser } from '@angular/common';\n\n\n@Component({\n  selector: 'my-logger',\n  templateUrl: './logger.component.html',\n  styleUrls: ['./logger.component.scss']\n})\nexport class LoggerComponent implements OnInit {\n  constructor(\n    private log: LogService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) { }\n\n  logs: Log[] = []\n  timer$: Subscription\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n\n      this.timer$ = interval(2000).pipe(flatMap(() => this.log.getLog())).subscribe(s => this.logs = s)\n    }\n\n  }\n\n  async clearLog() {\n    await this.log.clearLog().toPromise()\n  }\n\n  ngOnDestroy() {\n    if (this.timer$) {\n      this.timer$.unsubscribe()\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container bg-light p-0\\\">\\n    <div class=\\\"row m-0\\\">\\n        <div class=\\\"col-3 p-0\\\">\\n            <div class=\\\" w-100\\\">\\n                <a class=\\\"btn btn-dark w-100 rounded-0\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink=\\\"/m2m\\\">Главная</a>\\n                <a class=\\\"btn btn-dark w-100 rounded-0\\\" [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/m2m/parser\\\">Парсер</a>\\n\\n            </div>\\n        </div>\\n        <div class=\\\"col-9 p-0\\\">\\n            <my-logger></my-logger>\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'my-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  index-page-admin works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'my-index-page-admin',\n  templateUrl: './index-page-admin.component.html',\n  styleUrls: ['./index-page-admin.component.scss']\n})\nexport class IndexPageAdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row m-0\\\">\\n  <button [disabled]=\\\"status.isWorks\\\" (click)=\\\"startParser()\\\">Запустить парсер</button>\\n  <button [disabled]=\\\"status.isCancel || !status.isWorks\\\" (click)=\\\"cancelParser()\\\">Остановить парсер</button>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { ParserService } from '../../../services/parser.service';\nimport { interval, Subscription } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'my-parser-page-admin',\n  templateUrl: './parser-page-admin.component.html',\n  styleUrls: ['./parser-page-admin.component.scss']\n})\nexport class ParserPageAdminComponent implements OnInit {\n\n  constructor(\n    private parsServ: ParserService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n\n  ) { }\n  status: any = {}\n  timer$: Subscription\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n\n      this.timer$ = interval(3000).pipe(flatMap(s => this.parsServ.GetStatus())).subscribe(s => this.status = s)\n\n    }\n  }\n\n\n  startParser() {\n    this.parsServ.StartParser().toPromise();\n    this.parsServ.GetStatus().toPromise()\n  }\n\n\n  cancelParser() {\n    this.parsServ.CanselParser().toPromise();\n    this.parsServ.GetStatus().toPromise();\n  }\n\n  ngOnDestroy() {\n    if (this.timer$) {\n      this.timer$.unsubscribe();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Log } from \"../../../../models/log.model\";\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from \"rxjs/operators/\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n\n  public getLog(): Observable<Log[]> {\n    return this.http.get<Log[]>(\"/api/log\", { headers: { ignoreLoadingBar: '' } })\n  }\n\n  public clearLog() {\n    return this.http.delete(\"/api/log\", { responseType: \"blob\" }).pipe(tap(s => {\n      this.getLog().toPromise()\n    }))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParserService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  public GetStatus() {\n    return this.http.get(\"/api/parser/status\",{ headers: { ignoreLoadingBar: '' } })\n  }\n\n  public StartParser() {\n    return this.http.get(\"/api/parser/start\")\n  }\n\n  public CanselParser() {\n    return this.http.get(\"/api/parser/cancel\")\n  }\n}\n"],"sourceRoot":""}